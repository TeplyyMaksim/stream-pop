{"ast":null,"code":"import _classCallCheck from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksymteplyy/Projects/udemy/streams/client/src/containers/StreamForm/index.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport Input from 'UI/Input';\n\nvar StreamForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamForm, _Component);\n\n  function StreamForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.submitHandler = function (formValues) {\n      _this.props.onSubmit(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.submitHandler),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: Input,\n        label: \"Enter Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        component: Input,\n        label: \"Enter Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return StreamForm;\n}(Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamForm',\n  validate: validate\n})(StreamForm);","map":{"version":3,"sources":["/Users/maksymteplyy/Projects/udemy/streams/client/src/containers/StreamForm/index.js"],"names":["React","Component","Field","reduxForm","Input","StreamForm","submitHandler","formValues","props","onSubmit","handleSubmit","validate","errors","title","description","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;IAEMC,U;;;;;;;;;;;;;;;;;;UACJC,a,GAAgB,UAACC,UAAD,EAAgB;AAC9B,YAAKC,KAAL,CAAWC,QAAX,CAAoBF,UAApB;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWE,YAAX,CAAwB,KAAKJ,aAA7B,CAAhB;AAA6D,QAAA,SAAS,EAAC,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEF,KAA/B;AAAsC,QAAA,KAAK,EAAC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAEA,KAArC;AAA4C,QAAA,KAAK,EAAC,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AAOD;;;;EAbsBH,S;;AAgBzB,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACJ,UAAD,EAAgB;AAC/B,MAAMK,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACL,UAAU,CAACM,KAAhB,EAAuB;AACrBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AACD,MAAI,CAACN,UAAU,CAACO,WAAhB,EAA6B;AAC3BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AAED,SAAOF,MAAP;AACD,CAXD;;AAcA,eAAeT,SAAS,CAAC;AACvBY,EAAAA,IAAI,EAAE,YADiB;AAEvBJ,EAAAA,QAAQ,EAARA;AAFuB,CAAD,CAAT,CAGZN,UAHY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport Input from 'UI/Input';\n\nclass StreamForm extends Component {\n  submitHandler = (formValues) => {\n    this.props.onSubmit(formValues);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit(this.submitHandler)} className=\"ui form error\">\n        <Field name=\"title\" component={Input} label=\"Enter Title\" />\n        <Field name=\"description\" component={Input} label=\"Enter Description\" />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n \n  return errors;\n}\n\n\nexport default reduxForm({\n  form: 'streamForm',\n  validate,\n})(StreamForm);"]},"metadata":{},"sourceType":"module"}