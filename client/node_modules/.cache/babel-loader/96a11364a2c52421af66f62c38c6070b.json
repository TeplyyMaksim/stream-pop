{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from 'api/streams';\nimport { CREATE_STREAM, GET_STREAMS, GET_STREAM, EDIT_STREAM, DELETE_STREAM } from './types';\nimport history from 'routes/history';\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var userId, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = getState().auth.userId;\n                _context.next = 3;\n                return streams.post('/streams', _objectSpread({}, formValues, {\n                  userId: userId\n                }));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  stream: response.data\n                });\n                history.push('/');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getStream = function getStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return streams.get(\"/streams/\".concat(id));\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: GET_STREAM,\n                  stream: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getStreams = function getStreams() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return streams.get('/streams');\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: GET_STREAMS,\n                  streams: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editStream = function editStream(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return streams.patch(\"/streams/\".concat(id), formValues);\n\n              case 2:\n                response = _context4.sent;\n                dispatch({\n                  type: EDIT_STREAM,\n                  stream: response.data\n                });\n                history.push('/');\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteStream = function deleteStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return streams.delete(\"/streams/\".concat(id));\n\n              case 2:\n                dispatch({\n                  type: DELETE_STREAM,\n                  id: id\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/maksymteplyy/Projects/udemy/streams/client/src/store/actions/streams.js"],"names":["streams","CREATE_STREAM","GET_STREAMS","GET_STREAM","EDIT_STREAM","DELETE_STREAM","history","createStream","formValues","dispatch","getState","userId","auth","post","response","type","stream","data","push","getStream","id","get","getStreams","editStream","patch","deleteStream","delete"],"mappings":"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","sourcesContent":["import streams from 'api/streams';\nimport {\n  CREATE_STREAM,\n  GET_STREAMS,\n  GET_STREAM,\n  EDIT_STREAM,\n  DELETE_STREAM\n} from './types';\nimport history from 'routes/history';\n\nexport const createStream = formValues => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues, userId });\n\n  dispatch({ type: CREATE_STREAM, stream: response.data });\n  history.push('/');\n}\n\nexport const getStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n\n  dispatch({ type: GET_STREAM, stream: response.data });\n}\n\nexport const getStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n\n  dispatch({ type: GET_STREAMS, streams: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/streams/${id}`, formValues);\n\n  dispatch({ type: EDIT_STREAM, stream: response.data });\n  history.push('/');\n};\n\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, id });\n}"]},"metadata":{},"sourceType":"module"}