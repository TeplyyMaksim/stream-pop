{"ast":null,"code":"import _defineProperty from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { EDIT_STREAM, GET_STREAM, CREATE_STREAM, DELETE_STREAM, GET_STREAMS } from 'store/actions/types';\nimport { omit, mapKeys } from 'lodash';\nvar INITIAL_STATE = {};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined;\n\n  var type = _ref.type,\n      payload = _objectWithoutProperties(_ref, [\"type\"]);\n\n  switch (type) {\n    case GET_STREAMS:\n      {\n        var streams = payload.streams;\n        return _objectSpread({}, state, mapKeys(streams, 'id'));\n      }\n\n    case EDIT_STREAM:\n    case GET_STREAM:\n    case CREATE_STREAM:\n      {\n        var stream = payload.stream,\n            id = payload.stream.id;\n        return _objectSpread({}, state, _defineProperty({}, id, stream));\n      }\n\n    case DELETE_STREAM:\n      {\n        var _id = payload.id;\n        return omit(state, _id);\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n});","map":{"version":3,"sources":["/Users/maksymteplyy/Projects/udemy/streams/client/src/store/reducers/streams.js"],"names":["EDIT_STREAM","GET_STREAM","CREATE_STREAM","DELETE_STREAM","GET_STREAMS","omit","mapKeys","INITIAL_STATE","state","type","payload","streams","stream","id"],"mappings":";;;AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,WALF,QAMO,qBANP;AAOA,SAASC,IAAT,EAAeC,OAAf,QAA8B,QAA9B;AAEA,IAAMC,aAAa,GAAG,EAAtB;AAEA,gBAAe,YAAiD;AAAA,MAAhDC,KAAgD,uEAAxCD,aAAwC;;AAAA;;AAAA,MAAvBE,IAAuB,QAAvBA,IAAuB;AAAA,MAAdC,OAAc;;AAC9D,UAAQD,IAAR;AACE,SAAKL,WAAL;AAAkB;AAAA,YACRO,OADQ,GACID,OADJ,CACRC,OADQ;AAGhB,iCAAYH,KAAZ,EAAsBF,OAAO,CAACK,OAAD,EAAU,IAAV,CAA7B;AACD;;AACD,SAAKX,WAAL;AACA,SAAKC,UAAL;AACA,SAAKC,aAAL;AAAoB;AAAA,YAEhBU,MAFgB,GAIdF,OAJc,CAEhBE,MAFgB;AAAA,YAGNC,EAHM,GAIdH,OAJc,CAGhBE,MAHgB,CAGNC,EAHM;AAMlB,iCACKL,KADL,sBAEGK,EAFH,EAEQD,MAFR;AAID;;AACD,SAAKT,aAAL;AAAoB;AAAA,YACVU,GADU,GACHH,OADG,CACVG,EADU;AAGlB,eAAOR,IAAI,CAACG,KAAD,EAAQK,GAAR,CAAX;AACD;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AA1BH;AA4BD,CA7BD","sourcesContent":["import {\n  EDIT_STREAM,\n  GET_STREAM,\n  CREATE_STREAM,\n  DELETE_STREAM,\n  GET_STREAMS,\n} from 'store/actions/types';\nimport { omit, mapKeys } from 'lodash';\n\nconst INITIAL_STATE = {};\n\nexport default (state = INITIAL_STATE, { type, ...payload }) => {\n  switch (type) {\n    case GET_STREAMS: {\n      const { streams } = payload;\n\n      return { ...state, ...mapKeys(streams, 'id') };\n    }\n    case EDIT_STREAM:\n    case GET_STREAM:\n    case CREATE_STREAM: {\n      const {\n        stream,\n        stream: { id },\n      } = payload;\n\n      return {\n        ...state,\n        [id]: stream,\n      };\n    }\n    case DELETE_STREAM: {\n      const { id } = payload;\n\n      return omit(state, id);\n    }\n    default: {\n      return state;\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}