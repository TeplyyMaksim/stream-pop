{"ast":null,"code":"import _classCallCheck from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksymteplyy/Projects/udemy/streams/client/src/UI/Modal/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { noop } from 'lodash';\nimport ReactDOM from 'react-dom';\nvar modalRoot = document.querySelector('#modal');\n\nvar Modal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal(props) {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this, props));\n\n    _this.updateModalShow = function () {\n      var isOpened = _this.props.isOpened;\n      var isOpenedPrev = _this.state.isOpened;\n\n      if (isOpened === isOpenedPrev) {\n        return;\n      }\n\n      modalRoot[isOpened ? 'appendChild' : 'removeChild'](_this.wrapper);\n\n      _this.setState({\n        isOpened: isOpened\n      });\n    };\n\n    _this.renderHeader = function () {\n      var header = _this.props.header;\n      return header ? React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, header) : null;\n    };\n\n    _this.renderContent = function () {\n      var _this$props = _this.props,\n          content = _this$props.content,\n          children = _this$props.children;\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, content || children || null);\n    };\n\n    _this.renderActions = function () {\n      var actions = _this.props.actions;\n      return actions ? React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, actions) : null;\n    };\n\n    _this.wrapper = document.createElement('div');\n    _this.state = {\n      isOpened: null\n    };\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateModalShow();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var isOpened = this.props.isOpened,\n          wrapper = this.wrapper;\n\n      if (isOpened) {\n        modalRoot.appendChild(wrapper);\n      }\n\n      this.setState({\n        isOpened: isOpened\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var isOpened = this.props.isOpened,\n          wrapper = this.wrapper;\n\n      if (isOpened) {\n        modalRoot.removeChild(wrapper);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onClose = this.props.onClose,\n          isOpened = this.state.isOpened,\n          renderHeader = this.renderHeader,\n          renderContent = this.renderContent,\n          renderActions = this.renderActions;\n      return isOpened ? ReactDOM.createPortal(React.createElement(\"div\", {\n        className: \"ui dimmer modals visible active\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui standart modal visible active\",\n        onClick: function onClick(event) {\n          event.stopPropagation();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, renderHeader(), renderContent(), renderActions())), this.wrapper) : null;\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\n;\nModal.propTypes = {\n  isOpened: PropTypes.bool.isRequired,\n  onClose: PropTypes.func,\n  header: PropTypes.node,\n  content: PropTypes.node,\n  actions: PropTypes.node\n};\nModal.defaultProps = {\n  onClose: noop\n};\nexport default Modal;","map":{"version":3,"sources":["/Users/maksymteplyy/Projects/udemy/streams/client/src/UI/Modal/index.js"],"names":["React","Component","PropTypes","noop","ReactDOM","modalRoot","document","querySelector","Modal","props","updateModalShow","isOpened","isOpenedPrev","state","wrapper","setState","renderHeader","header","renderContent","content","children","renderActions","actions","createElement","appendChild","removeChild","onClose","createPortal","event","stopPropagation","propTypes","bool","isRequired","func","node","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { noop } from 'lodash';\nimport ReactDOM from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal')\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.wrapper = document.createElement('div');\n    this.state = { isOpened: null };\n  }\n\n  updateModalShow = () => {\n    const { isOpened } = this.props;\n    const { isOpened: isOpenedPrev } = this.state;\n\n    if (isOpened === isOpenedPrev) {\n      return;\n    }\n\n    modalRoot[isOpened ? 'appendChild' : 'removeChild'](this.wrapper);\n    this.setState({ isOpened });\n  }\n\n  componentDidUpdate() {\n    this.updateModalShow();\n  }\n  componentDidMount() {\n    const {\n      props: {\n        isOpened\n      },\n      wrapper,\n    } = this;\n\n    if (isOpened) {\n      modalRoot.appendChild(wrapper);\n    }\n\n    this.setState({ isOpened });\n  }\n  componentWillUnmount() {\n    const {\n      props: {\n        isOpened\n      },\n      wrapper,\n    } = this;\n\n    if (isOpened) {\n      modalRoot.removeChild(wrapper);\n    }\n  }\n\n  renderHeader = () => {\n    const { header } = this.props;\n\n    return header\n      ? (\n        <div className=\"header\">{header}</div>\n      )\n      : null;\n  }\n\n  renderContent = () => {\n    const { content, children } = this.props;\n    \n    return (\n      <div className=\"content\">\n        {content || children || null}\n      </div>\n    );\n  }\n  \n  renderActions = () => {\n    const { actions } = this.props;\n\n    return actions\n      ? (<div className=\"actions\">{actions}</div>)\n      : null;\n  }\n\n  render() {\n    const {\n      props: { onClose },\n      state: { isOpened },\n      renderHeader,\n      renderContent,\n      renderActions,  \n    } = this;\n\n\n    return isOpened\n      ? ReactDOM.createPortal(\n        (\n          <div\n            className=\"ui dimmer modals visible active\"\n            onClick={onClose}\n          >\n            <div\n              className=\"ui standart modal visible active\"\n              onClick={(event) => { event.stopPropagation() }}\n            >\n              {renderHeader()}\n              {renderContent()}\n              {renderActions()}\n            </div>\n          </div>\n        ),\n        this.wrapper\n      )\n      : null;\n  }\n};\n\nModal.propTypes = {\n  isOpened: PropTypes.bool.isRequired,\n  onClose: PropTypes.func,\n  header: PropTypes.node,\n  content: PropTypes.node,\n  actions: PropTypes.node,\n};\n\nModal.defaultProps = {\n  onClose: noop\n}\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}