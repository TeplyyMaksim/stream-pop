{"ast":null,"code":"import _classCallCheck from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksymteplyy/Projects/udemy/streams/client/src/routes/StreamEdit/index.js\";\nimport React, { Component } from 'react';\nimport { pick } from 'lodash';\nimport { connect } from 'react-redux';\nimport { getStream, editStream } from 'store/actions/streams';\nimport StreamForm from 'containers/StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamEdit, _Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.submitHandler = function (formValues) {\n      var _this$props = _this.props,\n          editStream = _this$props.editStream,\n          id = _this$props.match.params.id;\n      editStream(id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          getStream = _this$props2.getStream,\n          id = _this$props2.match.params.id;\n      getStream(id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stream = this.props.stream;\n\n      if (!stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Loading\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Edit a stream\"), React.createElement(StreamForm, {\n        initialValues: pick(stream, 'title', 'description'),\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nvar mapDispatchToProps = {\n  getStream: getStream,\n  editStream: editStream\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamEdit);","map":{"version":3,"sources":["/Users/maksymteplyy/Projects/udemy/streams/client/src/routes/StreamEdit/index.js"],"names":["React","Component","pick","connect","getStream","editStream","StreamForm","StreamEdit","submitHandler","formValues","props","id","match","params","stream","mapStateToProps","state","ownProps","streams","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,uBAAtC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;IAEMC,U;;;;;;;;;;;;;;;;;;UAUJC,a,GAAgB,UAACC,UAAD,EAAgB;AAAA,wBAI1B,MAAKC,KAJqB;AAAA,UAE5BL,UAF4B,eAE5BA,UAF4B;AAAA,UAGTM,EAHS,eAG5BC,KAH4B,CAGnBC,MAHmB,CAGTF,EAHS;AAM9BN,MAAAA,UAAU,CAACM,EAAD,EAAKF,UAAL,CAAV;AACD,K;;;;;;;wCAhBmB;AAAA,yBAId,KAAKC,KAJS;AAAA,UAEhBN,SAFgB,gBAEhBA,SAFgB;AAAA,UAGGO,EAHH,gBAGhBC,KAHgB,CAGPC,MAHO,CAGGF,EAHH;AAMlBP,MAAAA,SAAS,CAACO,EAAD,CAAT;AACD;;;6BAWQ;AAAA,UACCG,MADD,GACY,KAAKJ,KADjB,CACCI,MADD;;AAGP,UAAI,CAACA,MAAL,EAAa;AACX,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAKD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,UAAD;AACE,QAAA,aAAa,EAAEZ,IAAI,CAACY,MAAD,EAAS,OAAT,EAAkB,aAAlB,CADrB;AAEE,QAAA,QAAQ,EAAE,KAAKN,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AASD;;;;EAvCsBP,S;;AAwCxB;;AAED,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAsB;AAC5CH,IAAAA,MAAM,EAAEE,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACL,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AADoC,GAAtB;AAAA,CAAxB;;AAIA,IAAMQ,kBAAkB,GAAG;AACzBf,EAAAA,SAAS,EAATA,SADyB;AACdC,EAAAA,UAAU,EAAVA;AADc,CAA3B;AAIA,eAAeF,OAAO,CAACY,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CZ,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { pick } from 'lodash';\nimport { connect } from 'react-redux';\nimport { getStream, editStream } from 'store/actions/streams';\nimport StreamForm from 'containers/StreamForm';\n\nclass StreamEdit extends Component {\n  componentDidMount() {\n    const {\n      getStream,\n      match: { params: { id } },\n    } = this.props;\n\n    getStream(id);\n  }\n\n  submitHandler = (formValues) => {\n    const {\n      editStream,\n      match: { params: { id } },\n    } = this.props;\n\n    editStream(id, formValues);\n  }\n\n  render() {\n    const { stream } = this.props;\n    \n    if (!stream) {\n      return (\n        <div>\n          Loading\n        </div>\n      );\n    }\n    \n    return (\n      <div>\n        <h3>Edit a stream</h3>\n        <StreamForm\n          initialValues={pick(stream, 'title', 'description')}\n          onSubmit={this.submitHandler}\n        />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  stream: state.streams[ownProps.match.params.id]\n});\n\nconst mapDispatchToProps = {\n  getStream, editStream,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}