{"ast":null,"code":"import _classCallCheck from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksymteplyy/Projects/udemy/streams/client/src/routes/StreamShow/index.js\";\nimport React, { Component } from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { getStream } from 'store/actions/streams';\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamShow, _Component);\n\n  function StreamShow(props) {\n    var _this;\n\n    _classCallCheck(this, StreamShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).call(this, props));\n    _this.videoRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          getStream = _this$props.getStream,\n          id = _this$props.match.params.id;\n      getStream(id);\n      this.player = flv.createPlayer({\n        type: 'flv',\n        url: \"http://localhost:8000/live/\".concat(id, \".flv\")\n      });\n      this.player.attachMediaElement(this.videoRef.current);\n      this.player.load();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stream = this.props.stream;\n\n      if (!stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Loading\");\n      }\n\n      var title = stream.title,\n          description = stream.description;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: '100%'\n        },\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, title), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, description));\n    }\n  }]);\n\n  return StreamShow;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nvar mapDispatchToProps = {\n  getStream: getStream\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamShow);","map":{"version":3,"sources":["/Users/maksymteplyy/Projects/udemy/streams/client/src/routes/StreamShow/index.js"],"names":["React","Component","flv","connect","getStream","StreamShow","props","videoRef","createRef","id","match","params","player","createPlayer","type","url","attachMediaElement","current","load","stream","title","description","width","mapStateToProps","state","ownProps","streams","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AAEA,UAAKC,QAAL,GAAgBP,KAAK,CAACQ,SAAN,EAAhB;AAHiB;AAIlB;;;;wCAEmB;AAAA,wBAId,KAAKF,KAJS;AAAA,UAEhBF,SAFgB,eAEhBA,SAFgB;AAAA,UAGGK,EAHH,eAGhBC,KAHgB,CAGPC,MAHO,CAGGF,EAHH;AAMlBL,MAAAA,SAAS,CAACK,EAAD,CAAT;AACA,WAAKG,MAAL,GAAcV,GAAG,CAACW,YAAJ,CAAiB;AAC7BC,QAAAA,IAAI,EAAE,KADuB;AAE7BC,QAAAA,GAAG,uCAAgCN,EAAhC;AAF0B,OAAjB,CAAd;AAIA,WAAKG,MAAL,CAAYI,kBAAZ,CAA+B,KAAKT,QAAL,CAAcU,OAA7C;AACA,WAAKL,MAAL,CAAYM,IAAZ;AACD;;;6BAEQ;AAAA,UACCC,MADD,GACY,KAAKb,KADjB,CACCa,MADD;;AAGP,UAAI,CAACA,MAAL,EAAa;AACX,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAKD;;AATM,UAWCC,KAXD,GAWwBD,MAXxB,CAWCC,KAXD;AAAA,UAWQC,WAXR,GAWwBF,MAXxB,CAWQE,WAXR;AAaP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAE,KAAKd,QADZ;AAEE,QAAA,KAAK,EAAE;AAAEe,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,KAAL,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,WAAL,CAPF,CADF;AAWD;;;;EA9CsBpB,S;;AAiDzB,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAsB;AAC5CN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACf,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AADoC,GAAtB;AAAA,CAAxB;;AAGA,IAAMkB,kBAAkB,GAAG;AACzBvB,EAAAA,SAAS,EAATA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CAACoB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CtB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { getStream } from 'store/actions/streams';\n\nclass StreamShow extends Component {\n  constructor(props) {\n    super(props);\n  \n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      getStream,\n      match: { params: { id } },\n    } = this.props;\n\n    getStream(id);\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}.flv`,\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    const { stream } = this.props;\n    \n    if (!stream) {\n      return (\n        <div>\n          Loading\n        </div>\n      );\n    }\n\n    const { title, description } = stream;\n    \n    return (\n      <div>\n        <video\n          ref={this.videoRef}\n          style={{ width: '100%' }}\n          controls\n        />\n        <h1>{title}</h1>\n        <h5>{description}</h5>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  stream: state.streams[ownProps.match.params.id]\n});\nconst mapDispatchToProps = {\n  getStream,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamShow);\n"]},"metadata":{},"sourceType":"module"}