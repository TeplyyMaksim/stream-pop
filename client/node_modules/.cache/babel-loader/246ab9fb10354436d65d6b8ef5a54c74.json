{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/maksymteplyy/Projects/udemy/streams/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maksymteplyy/Projects/udemy/streams/client/src/routes/StreamList/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getStreams, deleteStream } from 'store/actions/streams';\nimport Modal from 'UI/Modal';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamList, _Component);\n\n  function StreamList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      deletingStream: null\n    };\n\n    _this.renderList = function () {\n      var streams = _this.props.streams;\n      return streams.map(function (stream) {\n        var id = stream.id,\n            title = stream.title,\n            description = stream.description;\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, _this.renderAdminButtons(stream), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/\".concat(id),\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, title), React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, description)));\n      });\n    };\n\n    _this.renderCreateButton = function () {\n      var isSignedIn = _this.props.isSignedIn;\n\n      if (!isSignedIn) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/new\",\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Create Stream\"));\n    };\n\n    _this.closeDeleteModalHandler = function () {\n      _this.setState({\n        deletingStream: null\n      });\n    };\n\n    _this.deleteStreamHandler =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _assertThisInitialize, id, deleteStream;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _assertThisInitialize = _assertThisInitialized(_this), id = _assertThisInitialize.state.deletingStream.id, deleteStream = _assertThisInitialize.props.deleteStream;\n              _context.next = 3;\n              return deleteStream(id);\n\n            case 3:\n              _this.setState({\n                deletingStream: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.renderDeleteModal = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          deletingStream = _assertThisInitialize2.state.deletingStream,\n          closeDeleteModalHandler = _assertThisInitialize2.closeDeleteModalHandler,\n          deleteStreamHandler = _assertThisInitialize2.deleteStreamHandler;\n\n      var title = deletingStream && deletingStream.title;\n      return React.createElement(Modal, {\n        header: \"Delete Stream\",\n        actions: React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          className: \"ui primary button\",\n          onClick: deleteStreamHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(\"button\", {\n          className: \"ui button\",\n          onClick: closeDeleteModalHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Cancel\")),\n        isOpened: Boolean(deletingStream),\n        onClose: closeDeleteModalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Are you sure you want to delete the stream with title \\\"\", title, \"\\\"\");\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getStreams();\n    }\n  }, {\n    key: \"renderAdminButtons\",\n    value: function renderAdminButtons(stream) {\n      var _this2 = this;\n\n      var currentUserId = this.props.currentUserId;\n      var userId = stream.userId,\n          streamId = stream.id;\n\n      if (userId !== currentUserId) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/edit/\".concat(streamId),\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \"ui button negative\",\n        onClick: function onClick() {\n          return _this2.setState({\n            deletingStream: stream\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var renderDeleteModal = this.renderDeleteModal,\n          renderCreateButton = this.renderCreateButton,\n          renderList = this.renderList;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, renderList()), renderCreateButton(), renderDeleteModal());\n    }\n  }]);\n\n  return StreamList;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var streams = _ref2.streams,\n      _ref2$auth = _ref2.auth,\n      userId = _ref2$auth.userId,\n      isSignedIn = _ref2$auth.isSignedIn;\n  return {\n    streams: Object.values(streams),\n    currentUserId: userId,\n    isSignedIn: isSignedIn\n  };\n};\n\nvar mapDispatchToProps = {\n  getStreams: getStreams,\n  deleteStream: deleteStream\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamList);","map":{"version":3,"sources":["/Users/maksymteplyy/Projects/udemy/streams/client/src/routes/StreamList/index.js"],"names":["React","Component","connect","Link","getStreams","deleteStream","Modal","StreamList","state","deletingStream","renderList","streams","props","map","stream","id","title","description","renderAdminButtons","renderCreateButton","isSignedIn","textAlign","closeDeleteModalHandler","setState","deleteStreamHandler","renderDeleteModal","Boolean","currentUserId","userId","streamId","mapStateToProps","auth","Object","values","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getStreams, deleteStream } from 'store/actions/streams';\nimport Modal from 'UI/Modal';\n\nclass StreamList extends Component {\n  state = {\n    deletingStream: null,\n  }\n\n  componentDidMount() {\n    this.props.getStreams();\n  }\n\n  renderAdminButtons(stream) {\n    const { currentUserId } = this.props;\n    const { userId, id: streamId } = stream\n\n    if (userId !== currentUserId) {\n      return null;\n    }\n\n    return (\n      <div className=\"right floated content\">\n        <Link\n          to={`/streams/edit/${streamId}`}\n          className=\"ui button primary\"\n        >\n          Edit\n        </Link>\n        <button\n          className=\"ui button negative\"\n          onClick={() => this.setState({ deletingStream: stream })}\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  renderList = () => {\n    const { streams } = this.props;\n\n    return streams.map((stream) => {\n      const { id, title, description } = stream\n\n      return (\n        <div className=\"item\" key={id}>\n          {this.renderAdminButtons(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            <Link\n              to={`/streams/${id}`}\n              className=\"header\"\n            >\n              {title}\n            </Link>\n            <div className=\"description\">{description}</div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  renderCreateButton = () => {\n    const { isSignedIn } = this.props;\n    \n    if (!isSignedIn) {\n      return null;\n    }\n\n    return (\n      <div style={{ textAlign: 'right' }}>\n        <Link to=\"/streams/new\" className=\"ui button primary\">\n          Create Stream\n        </Link>\n      </div>\n    )\n  }\n\n  closeDeleteModalHandler = () => {\n    this.setState({ deletingStream: null });\n  }\n\n  deleteStreamHandler = async () => {\n    const {\n      state: { deletingStream: { id } },\n      props: { deleteStream },\n    } = this;\n\n    await deleteStream(id);\n    this.setState({ deletingStream: null });\n  }\n\n  renderDeleteModal = () => {\n    const {\n      state: { deletingStream },\n      closeDeleteModalHandler,\n      deleteStreamHandler,\n    } = this;\n    const title = deletingStream && deletingStream.title;\n\n    return (\n      <Modal\n        header=\"Delete Stream\"\n        actions={(\n          <>\n            <button\n              className=\"ui primary button\"\n              onClick={deleteStreamHandler}\n            >\n              Delete\n            </button>\n            <button\n              className=\"ui button\"\n              onClick={closeDeleteModalHandler}\n            >\n              Cancel\n            </button>\n          </>\n        )}\n        isOpened={Boolean(deletingStream)}\n        onClose={closeDeleteModalHandler}\n      >\n        Are you sure you want to delete the stream with title \"{title}\"\n      </Modal>\n    );\n  }\n\n\n  render() {\n    const {\n      renderDeleteModal,\n      renderCreateButton,\n      renderList,\n    } = this;\n\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">\n          {renderList()}\n        </div>\n        {renderCreateButton()}\n        {renderDeleteModal()}\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = ({ streams, auth: { userId, isSignedIn } }) => ({\n  streams: Object.values(streams),\n  currentUserId: userId,\n  isSignedIn,\n});\n\n\nconst mapDispatchToProps = {\n  getStreams,\n  deleteStream,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamList);\n"]},"metadata":{},"sourceType":"module"}